// <auto-generated />
using System;
using ConnectionProvider.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectionProvider.Migrations
{
    [DbContext(typeof(AppDbСontext))]
    partial class AppDbСontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.ContractChoice.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.ContractChoice.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SampleInstance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Domain.Entities.ActVariationsOfCompletion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Variation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActVariationsOfCompletions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Variation = "Качество оказанных Услуг соответствует предъявленным требованиям"
                        },
                        new
                        {
                            Id = 2,
                            Variation = "В результате осмотра результата оказанных Услуг недостатки не выявлены"
                        },
                        new
                        {
                            Id = 3,
                            Variation = "В результате осмотра выявлены следующие недостатки"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgentLocation = "Aгент находится в Душанбе "
                        },
                        new
                        {
                            Id = 2,
                            AgentLocation = "Агент находится в Худжанде"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AgreementConcluder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcluderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgreementConcluders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcluderName = "Договор заключает головной офис"
                        },
                        new
                        {
                            Id = 2,
                            ConcluderName = "Договор заключает филиал Банка в г. Душанбе"
                        },
                        new
                        {
                            Id = 3,
                            ConcluderName = "Договор заключает филиал Банка в г. Худжанде"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AgreementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgreementEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityName = "Юридическое лицо"
                        },
                        new
                        {
                            Id = 2,
                            EntityName = "Индивидуальный предприниматель"
                        },
                        new
                        {
                            Id = 3,
                            EntityName = "Физическое лицо"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Archivievum.Archive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorsFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("Domain.Entities.Citizenship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CitizenshipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Citizenships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CitizenshipName = "Шахрванди Чумхурии Точикистон"
                        });
                });

            modelBuilder.Entity("Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "г. Душанбе"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PartialPaymentOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PartialPaymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PartialPaymentOrderNames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PartialPaymentName = "Первый платеж в сомони"
                        },
                        new
                        {
                            Id = 2,
                            PartialPaymentName = "Первый платеж в процентах"
                        },
                        new
                        {
                            Id = 3,
                            PartialPaymentName = "Второй платеж в сомони"
                        },
                        new
                        {
                            Id = 4,
                            PartialPaymentName = "Второй платеж в процентах"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PassportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PassportTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PassportTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PassportTypeName = "Шиноснома"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PaymentOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PaymentOrderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentOrderName = "Налично"
                        },
                        new
                        {
                            Id = 2,
                            PaymentOrderName = "Безналично"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PaymentTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TermText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TermText = "Агар дар гуфтушунидҳо ба ҳамфикрӣ ноил нашаванд, баҳс бояд дар суди иқтисодии ш. Душанбе аз рӯи маҳалли воқеъ гардидани Исполнитель баррасӣ карда шавад."
                        },
                        new
                        {
                            Id = 2,
                            TermText = "Агар дар гуфтушунидҳо ба ҳамфикрӣ ноил нашаванд, баҳс бояд дар суди иқтисодии ш. Хучанд аз рӯи маҳалли воқеъ гардидани Исполнитель баррасӣ карда шавад."
                        },
                        new
                        {
                            Id = 3,
                            TermText = "Агар дар гуфтушунидҳо ба ҳамфикрӣ ноил нашаванд, баҳс бояд дар суди ш. Душанбе аз рӯи маҳалли воқеъ гардидани Исполнитель баррасӣ карда шавад."
                        },
                        new
                        {
                            Id = 4,
                            TermText = "Агар дар гуфтушунидҳо ба ҳамфикрӣ ноил нашаванд, баҳс бояд дар суди ш. Хучанд аз рӯи маҳалли воқеъ гардидани Исполнитель баррасӣ карда шавад."
                        });
                });

            modelBuilder.Entity("Domain.Entities.RendedServicesVariations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RendedServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RendedServicesVariations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RendedServiceName = "Головной - улица Багауддинова"
                        },
                        new
                        {
                            Id = 2,
                            RendedServiceName = "Филиал в Душанбе - улица Ниёзи"
                        },
                        new
                        {
                            Id = 3,
                            RendedServiceName = "Филиал в Худжанде - улицу не помню"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServiceName = "Услуга указывается в самом договоре"
                        },
                        new
                        {
                            Id = 2,
                            ServiceName = "Услуга указывается в приложении к Договору"
                        });
                });

            modelBuilder.Entity("Domain.Entities.StructuralSubdivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SubdivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StructuralSubdivisions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubdivisionName = "Филиали Ҷамъияти саҳомии кушодаи..."
                        });
                });

            modelBuilder.Entity("Domain.Entities.TrustieFoundation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FoundationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrustieFoundations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoundationName = "Доверенность"
                        },
                        new
                        {
                            Id = 2,
                            FoundationName = "Устав"
                        });
                });

            modelBuilder.Entity("Domain.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Editor"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("Domain.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.User.UserCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RandomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCodes");
                });

            modelBuilder.Entity("Domain.ContractChoice.SubCategory", b =>
                {
                    b.HasOne("Domain.ContractChoice.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.User.User", b =>
                {
                    b.HasOne("Domain.User.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.User.UserCode", b =>
                {
                    b.HasOne("Domain.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
